{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","Hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,oCACI,0BAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYbM,GAZa,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OADAc,QAAQC,IAAIL,EAAMV,GAEd,yBAAKgB,UAAU,0CACX,yBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,2BAAIA,KCLHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAKoB,EACLL,SAAS,SAItB,CAACtB,IAEGuB,EDhBuBK,CAAa5B,GAA/Ba,EAHuB,EAG5BN,KAAYe,EAHgB,EAGhBA,QAEnB,OACI,kBAAC,WAAD,KACI,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAENL,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAmB,IAAMnB,EAAIC,IACND,UEQboB,EArBM,WAAM,IAAD,EAEc5C,mBAAS,CAAC,qBAFxB,mBAEf6C,EAFe,KAEH9C,EAFG,KAItB,OACI,kBAAC,WAAD,KACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAAK8C,EAAWtB,KAAI,SAACT,GAAD,OACf,kBAAC,EAAD,CACGA,SAAYA,EACZ6B,IAAK7B,U,MCXzBgC,IAASC,OAAQ,kBACb,EADa,MAEbC,SAASC,eAAe,U","file":"static/js/main.490f4658.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        // console.log(\"hecho\");\r\n        \r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <form onSubmit = {handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value = {inputValue}\r\n                    onChange= {handleInputChange}\r\n                    \r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=KF0qEJ4DecksdwGQsH2pami35GTVel2W`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n   return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    console.log(title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                \r\n                    {images.map(img => \r\n                        <GifGridItem \r\n                        key ={img.id}\r\n                        {...img}\r\n                        />\r\n                        )}\r\n                \r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import  {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React,{Fragment, useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState([\"Kimetsu no yaiba\"]);\r\n    \r\n    return(\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n            \r\n            <ul>{categories.map((category) =>\r\n                 <GifGrid \r\n                    category = {category}\r\n                    key={category}\r\n                 />\r\n            )}</ul>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}